name: simulation
root: ./
startup_window: status
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; export ODOMETRY_TYPE=hector; export WORLD_NAME=simulation
windows:
  - rosbag:
      layout: tiled
      panes:
        #       - waitForControl; rosrun occupancy_grid_merger record.sh
        # - waitForControl; rosrun topic_tools throttle messages hector_mapping/map 0.01
        #- waitForControl; rosrun topic_tools throttle messages hector_mapping/map 
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch gui:=true world_file:=/home/maderja1/bag_files/gazebo_world_maze_for_two.world
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; spawn_uav 1 --file pos.txt --$UAV_TYPE --run --delete --enable-rangefinder --enable-ground-truth --enable-rplidar 
        - waitForSimulation; spawn_uav 2 --file pos.txt --$UAV_TYPE --run --delete --enable-rangefinder --enable-ground-truth --enable-rplidar
       # - waitForSimulation; spawn_uav --file pos.txt --$UAV_TYPE --run --delete --enable-rangefinder --enable-rplidar --enable-bluefox-camera 
  - map_merger:
     layout: tiled
     panes:
        - export UAV_NAME=uav1; waitForControl; roslaunch -v occupancy_grid_merger simulation.launch
        - waitForOdometry; roslaunch -v relative_pose_estimator simulation.launch
        - history -s rosservice call /$UAV_NAME/occupancy_grid_merger/test
        - history -s rosservice call /$UAV_NAME/occupancy_grid_merger/merge_occupancy_grid_map
  - hector_slam:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general hector_slam.launch
        #        - waitForOdometry; roslaunch hector_mapping mapping_default.launch
  - optic_flow:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_optic_flow optic_flow.launch
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_optic_flow optic_flow.launch
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch
          #- waitForOdometry; roslaunch mrs_uav_general core.launch config_odometry:=./custom_configs/odometry.yaml config_uav_manager:=./custom_configs/uav_manager.yaml
  - takeoff:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
          #- 'export UAV_NAME=uav1;
          #waitForControl;
          #rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          #rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - goto:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1;
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[10.0, 0.0, 3.0, 0.0\]\"'
        - 'export UAV_NAME=uav2;
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[10.0, 0.0, 3.0, 0.0\]\"'
  - forest_flier:
      layout: tiled
      panes:
        - waitForControl; roslaunch forest_flier uav.launch
        - 'export UAV_NAME=uav1; 
          history -s rosservice call /$UAV_NAME/forest_flier/goto \"goal: \[0.0, 10.0, 1.5, 0.0\]\";
          history -s rosservice call /$UAV_NAME/forest_flier/return \"goal: \[0.0, 10.0, 1.5, 0.0\]\"'
        - 'export UAV_NAME=uav2;
          history -s rosservice call /$UAV_NAME/forest_flier/goto \"goal: \[0.0, 10.0, 1.5, 0.0\]\";
          history -s rosservice call /$UAV_NAME/forest_flier/return \"goal: \[0.0, 10.0, 1.5, 0.0\]\"'
  - dynamic_reconfigure:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; rosrun rqt_reconfigure rqt_reconfigure
        - export UAV_NAME=uav2; waitForControl; rosrun rqt_reconfigure rqt_reconfigure
  - rviz:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; roslaunch mrs_uav_testing rviz.launch
        - export UAV_NAME=uav1; waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
        - export UAV_NAME=uav2; waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
